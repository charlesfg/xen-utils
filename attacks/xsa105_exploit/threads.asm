BITS 64

extern old_gdtr
extern new_gdtr
extern get_root

section .data
    barrier:
        db 0x0

    farcall:
        dq 0x0  ; offset
        dw 0x38 ; selector

section .rwx_section progbits exec write
    global lgdt_thread
    global patch_thread
    global callgate_callback

lgdt_thread:
    push rbx
    sgdt [old_gdtr]
    mov rbx, new_gdtr
    lea rax, [barrier]
    lock inc byte [rax]
._wait:
    cmp byte [rax], 2
    jnz ._wait
target:
    ud2 ; \x0F\x0B
    nop ; \x90
    nop ; \x90
    call far [farcall]
    xor rax, rax
    pop rbx
    ret

patch_thread:
    lea rax, [barrier]
    lock inc byte [rax]
._wait:
    cmp byte [rax], 2
    jnz ._wait
    mov dword [target], 0x9013010F ; lgdt [rbx] ; nop
    xor rax, rax
    ret

callgate_callback:
    cli
    lgdt [old_gdtr]
    sti
    swapgs
    call get_root
    swapgs
    db 0x48
    db 0xcb ; retf 64 bits
